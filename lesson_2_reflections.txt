What happens when you initialize a repository? Why do you need to do it?
It takes a snapshot of the files and creates a logging system for GIT to work.
We need it so GIT can log the commits done.

How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging is a test area before going into the final area.
It offers you the chance to make sure everything is good before going live.

How can you use the staging area to make sure you have one commit per logical change?
We can use the staging area by checking the differences in staging are not so big, using diff/log etc...

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
If there are significant/complicated changes, it helps to have different versions to be able to test and play with. You an also track down a version which might conflict with the master later.

How do the diagrams help you visualize the branch structure?
Anything graphical will help see data in general. This makes it easier for a person to understand what is happening, as usually something visual ( as a tree ) is understandable to us.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches together collects all the changes done on both and GIT puts them together in the most logical way. We represent it in a diagram so we can treat each branch as a path that is connecting. The diagram shows it as if it where two roads connecting together, which makes total sense for us.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
PROS GIT AUTOMATIC
-Checks the lines on 3 versions instantally
-Saves time
-Comments the files if there are conflicts, so you may check later how to solve it

CONS
-Not 100% automatic
-Cant guess for you, you must solve a conflict.
